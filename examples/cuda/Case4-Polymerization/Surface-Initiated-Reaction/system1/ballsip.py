#!/usr/bin/python
from poetry import cu_gala as gala 
from poetry import _options

filename = 'gencon_ballSIP.xml'# initial configuration file
build_method = gala.XMLReader(filename)
perform_config = gala.PerformConfig(_options.gpu)  # assign GPU by index
all_info = gala.AllInfo(build_method,perform_config)# build system information

dt = 0.001
app = gala.Application(all_info, dt)  # build up an application with system information and integration time-step

neighbor_list = gala.NeighborList(all_info, 1.12246 ,0.2)#(,rcut,rbuffer)
dpdThermoLJForce = gala.DpdThermoLJForce(all_info, neighbor_list, 1.12246 ,12371)#(,,rcut,seed for RNG)
dpdThermoLJForce.setSigma(3.0) # the parameter sigma for DPD thermostat
dpdThermoLJForce.setParams('A', 'A' ,0.0 ,1.0 ,1.0)#(type,type,epsilon,sigma,alpha)
dpdThermoLJForce.setParams('A', 'B' ,0.0 ,1.0 ,1.0)#(type,type,epsilon,sigma,alpha)
dpdThermoLJForce.setParams('A', 'C' ,1.0 ,1.0 ,1.0)#(type,type,epsilon,sigma,alpha)
dpdThermoLJForce.setParams('B', 'B' ,0.0 ,1.0 ,1.0)#(type,type,epsilon,sigma,alpha)
dpdThermoLJForce.setParams('B', 'C' ,1.0 ,1.0 ,1.0)#(type,type,epsilon,sigma,alpha)
dpdThermoLJForce.setParams('C', 'C' ,1.0 ,1.0 ,1.0)#(type,type,epsilon,sigma,alpha)
app.add(dpdThermoLJForce)

#beforehand set the type of bonds which will be generated by reaction
all_info.addBondType('polymer')

bondforcefene = gala.BondForceFENE(all_info)
bondforcefene.setParams('polymer', 10 ,1.2)#(,K0, R0)
app.add(bondforcefene)

group = gala.ParticleSet(all_info,'C')
Gwvv = gala.DPDGWVV(all_info, group)
app.add(Gwvv)

sort_method = gala.Sort(all_info)
sort_method.setPeriod(300)# (period)
app.add(sort_method)

ZeroMomentum = gala.ZeroMomentum(all_info)
ZeroMomentum.setPeriod(10)# (period)
app.add(ZeroMomentum)
comp_info = gala.ComputeInfo(all_info, group)

DInfo = gala.DumpInfo(all_info, comp_info, 'data.log')
DInfo.setPeriod(500)# (period)
app.add(DInfo)

xml = gala.XMLDump(all_info, 'p')
xml.setPeriod(10000)# (period)
xml.setOutputBond(True)
xml.setOutputInit(True)
xml.setOutputCris(True)
app.add(xml)

mol2 = gala.MOL2Dump(all_info, 'p')
mol2.setPeriod(20000)# (period)
#mol2.setChangeFreeType('C')
#mol2.deleteBoundaryBond(True)
app.add(mol2)

#ready ro run 
app.run(2000)
# Period2: change larger time step to relax
app.setDt(0.002)
app.run(8000)
# Period3: start the SIP reaction
mol2.setPeriod(2000)
reaction = gala.Polymerization(all_info, neighbor_list, 1.12246 ,161)
reaction.setPr(0.002)
reaction.setPeriod(50)
app.add(reaction)
#DInfo.setPeriod(1)# (period)
app.run(1000000)
# Period4: relaxation after the SIP reaction
reaction.setPr(0)
mol2.setPeriod(50000)
app.run(200000)
neighbor_list.printStats()
#
#
